{"version":3,"file":"Vector2.js","names":["Vector2","Serializable","add","vector1","vector2","x","y","interpolatePoints","point1","point2","t","nx","ny","getPointAtAngle","angle","distance","angle2","Math","sin","PI","getAngle","atan2","getAngleBetweenLines","point3","point4","dAx","dAy","dBx","dBy","getAbsoluteAngleBetweenLines","getDistance","sqrt","pow","getLinesIntersectionPoint","A1","A2","B1","B2","aAC","aCB","lC","aAB","A","B","lA","lB","frec","frec2","getRaysIntersectionPoint","zero","one","fromSerialized","data","constructor","normalize","multiply","max","serialize","deserialize"],"sources":["../src/Vector2.ts"],"sourcesContent":["import Serializable from \"./Serializable\";\r\n\r\nexport default class Vector2 extends Serializable {\r\n  /** Add two Vector2 */\r\n  public static add(vector1: Vector2, vector2: Vector2): Vector2 {\r\n    return new Vector2(\r\n      vector1.x + vector2.x,\r\n      vector1.y + vector2.y,\r\n    );\r\n  }\r\n  /** Get the coordinates betwen two points with t factor */\r\n  public static interpolatePoints(point1: Vector2, point2: Vector2, t: number) {\r\n    const nx = point1.x + (point2.x - point1.x) * t;\r\n    const ny = point1.y + (point2.y - point1.y) * t;\r\n    return new Vector2(nx, ny);\r\n  }\r\n  /** Get the point vector at a certain angle and distance */\r\n  public static getPointAtAngle(angle: number, distance: number) {\r\n    const angle2 = 180 - 90 - angle;\r\n    const x =\r\n      (distance * Math.sin((angle * Math.PI) / 180)) /\r\n      Math.sin((90 * Math.PI) / 180);\r\n    const y =\r\n      (distance * Math.sin((angle2 * Math.PI) / 180)) /\r\n      Math.sin((90 * Math.PI) / 180);\r\n\r\n    return new Vector2(y, x);\r\n  }\r\n  /** Get angle between two points */\r\n  public static getAngle(point1: Vector2, point2: Vector2) {\r\n    return (Math.atan2(point2.y - point1.y, point2.x - point1.x) * 180) / Math.PI;\r\n  }\r\n  /** Get angle between two lines */\r\n  public static getAngleBetweenLines(point1: Vector2, point2: Vector2, point3: Vector2, point4: Vector2) {\r\n    const dAx = point2.x - point1.x;\r\n    const dAy = point2.y - point1.y;\r\n    const dBx = point4.x - point3.x;\r\n    const dBy = point4.y - point3.y;\r\n    const angle = Math.atan2(dAx * dBy - dAy * dBx, dAx * dBx + dAy * dBy);\r\n    return  angle * (180 / Math.PI);\r\n  }\r\n  /** Get absolue angle between two lines */\r\n  public static getAbsoluteAngleBetweenLines(point1: Vector2, point2: Vector2, point3: Vector2, point4: Vector2) {\r\n    const dAx = point2.x - point1.x;\r\n    const dAy = point2.y - point1.y;\r\n    const dBx = point4.x - point3.x;\r\n    const dBy = point4.y - point3.y;\r\n    let angle = Math.atan2(dAx * dBy - dAy * dBx, dAx * dBx + dAy * dBy);\r\n    if (angle < 0) {\r\n      angle = angle * -1;\r\n    }\r\n    return  angle * (180 / Math.PI);\r\n  }\r\n  /** Get distance between two points */\r\n  public static getDistance(point1: Vector2, point2: Vector2) {\r\n    return Math.sqrt(\r\n      Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2),\r\n    );\r\n  }\r\n  /** Point of intersection of two lines */\r\n  public static getLinesIntersectionPoint(\r\n    A1: Vector2,\r\n    A2: Vector2,\r\n    B1: Vector2,\r\n    B2: Vector2,\r\n  ): Vector2 {\r\n    /* Get angle between line A and vector (C) from A1 to B1 */\r\n    const aAC = Vector2.getAngleBetweenLines(A1, A2, A1, B1);\r\n    /* Get angle between vector (C) from A1 to B1 and line B */\r\n    const aCB = Vector2.getAngleBetweenLines(B1, A1, B1, B2);\r\n    /* Get C length */\r\n    const lC = Vector2.getDistance(A1, B1);\r\n    /* Get the angle of the intersection point */\r\n    const aAB = 180 - aAC - aCB;\r\n    /* Get ray A and ray B by the solution of the triangle with the known side and two corners */\r\n    const A =\r\n    (lC * Math.sin((aCB * Math.PI) / 180)) /\r\n      Math.sin((aAB * Math.PI) / 180);\r\n    const B = (A * Math.sin((aAC * Math.PI) / 180)) /\r\n      Math.sin((aCB * Math.PI) / 180);\r\n    /* Get length of A and B */\r\n    const lA = Vector2.getDistance(A1, A2);\r\n    const lB = Vector2.getDistance(B1, B2);\r\n\r\n    const frec = A / lA;\r\n    const frec2 = B / lB;\r\n\r\n    return frec <= 1 && frec >= 0 && frec2 <= 1 && frec2 >= 0\r\n      ? Vector2.interpolatePoints(A1, A2, frec)\r\n      : null;\r\n  }\r\n  /** Point of intersection of two lines */\r\n  public static getRaysIntersectionPoint(\r\n    A1: Vector2,\r\n    A2: Vector2,\r\n    B1: Vector2,\r\n    B2: Vector2,\r\n  ): Vector2 {\r\n    /* Get angle between line A and vector (C) from A1 to B1 */\r\n    const aAC = Vector2.getAngleBetweenLines(A1, A2, A1, B1);\r\n    /* Get angle between vector (C) from A1 to B1 and line B */\r\n    const aCB = Vector2.getAngleBetweenLines(B1, A1, B1, B2);\r\n    /* Get the angle of the intersection point */\r\n    const aAB = 180 - aAC - aCB;\r\n    /* Get C length */\r\n    const lC = Vector2.getDistance(A1, B1);\r\n    /* Get ray A and ray B by the solution of the triangle with the known side and two corners */\r\n    const A =\r\n    (lC * Math.sin((aCB * Math.PI) / 180)) /\r\n      Math.sin((aAB * Math.PI) / 180);\r\n    const lA = Vector2.getDistance(A1, A2);\r\n\r\n    return Vector2.interpolatePoints(A1, A2, A / lA);\r\n  }\r\n  public static get zero(): Vector2 {\r\n    return new Vector2(0, 0);\r\n  }\r\n  public static get one(): Vector2 {\r\n    return new Vector2(1, 1);\r\n  }\r\n  public static fromSerialized(data: number[]) {\r\n    return new Vector2(data[0] || 0, data[1] || 0);\r\n  }\r\n  public x: number;\r\n  public y: number;\r\n\r\n  constructor(x: number, y: number) {\r\n    super();\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  /** Makes this vector have a magnitude of 1 */\r\n  public normalize() {\r\n    const multiply = 1 / Math.max(this.x, this.y);\r\n    return new Vector2(\r\n      this.x * multiply,\r\n      this.y * multiply,\r\n    );\r\n  }\r\n\r\n  public serialize() {\r\n    return [this.x, this.y];\r\n  }\r\n\r\n  public deserialize(data: number[]) {\r\n    this.x = data[0];\r\n    this.y = data[1];\r\n  }\r\n}\r\n"],"mappings":"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"}