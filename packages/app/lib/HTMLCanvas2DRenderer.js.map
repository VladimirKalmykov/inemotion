{"version":3,"file":"HTMLCanvas2DRenderer.js","names":["defaultOnUpdate","HTMLCanvas2DRenderer","BaseModule","autoSize","_autoSize","value","applyAutoSize","maxFps","_maxFps","applyMaxFps","dimension","_dimension","constructor","element","width","offsetWidth","height","offsetHeight","Vector2","style","setTimeout","fitCanvasDimensionToElement","maxFrameSize","context","deltaTime","Number","Date","lastFrameTimeStamp","prevFrameOverlap","clear","resetTransformationForCamera","onUpdate","resetTranformationForUI","onUI","renderFps","animationFrameRequestId","requestAnimationFrame","renderFrame","document","createElement","getContext","disposables","add","cancelAnimationFrame","window","addEventListener","removeEventListener","start","getViewportDimension","translate2D","position","translate","x","y","cancelTranslate2D","transform2D","transform","scale","rotate","z","cancelTransform2D","setTransform","clearRect","backupStyle","fillStyle","fpsText","Math","round","font","fillText"],"sources":["../src/HTMLCanvas2DRenderer.ts"],"sourcesContent":["import { BaseModule, IHTMLCanvas2DRendererConfig, Vector2, Transform2D } from \"@inemotion/core\";\r\n\r\nconst defaultOnUpdate = () => {};\r\n\r\n/** Sealed HTML Canvas 2D Renderer */\r\nexport default class HTMLCanvas2DRenderer extends BaseModule {\r\n  protected static serializableFields: string[] = [\"autoSize\", \"maxFps\"];\r\n\r\n  /** Automatically fit to the container */\r\n  private _autoSize: boolean = false;\r\n  public get autoSize(): boolean {\r\n    return this._autoSize;\r\n  }\r\n  public set autoSize(value: boolean) {\r\n    this._autoSize = value;\r\n    this.applyAutoSize();\r\n  }\r\n  /** Limit max frame per second */\r\n  private _maxFps: number = 60;\r\n  public get maxFps(): number {\r\n    return this._maxFps;\r\n  }\r\n  public set maxFps(value: number) {\r\n    this._maxFps = value;\r\n    this.applyMaxFps();\r\n  }\r\n  /** fn called each time canvas update */\r\n  public onUpdate: (deltaTime: number) => void = defaultOnUpdate;\r\n  public onUI: (deltaTime: number) => void = defaultOnUpdate;\r\n  public element: HTMLCanvasElement;\r\n  /** Ms since last frame */\r\n  public deltaTime: number = 0;\r\n  /** Canvas rendering context */\r\n  public context: CanvasRenderingContext2D;\r\n  /** Canvas width and height */\r\n  private _dimension: Vector2;\r\n  /** Readonly canvas width and height */\r\n  public get dimension(): Vector2 {\r\n    return this._dimension;\r\n  }\r\n  /** Ms per frame. This value will automatically calculated from settings.fps */\r\n  private maxFrameSize: number = 0;\r\n  /** Last frame time stamp */\r\n  private lastFrameTimeStamp: number = 0;\r\n  /* How much time is in excess relative to the default frame size */\r\n  private prevFrameOverlap: number = 0;\r\n  /** Reference to canvas rendering context */\r\n  private animationFrameRequestId: number;\r\n\r\n  public constructor({\r\n    autoSize = true,\r\n    maxFps = 90,\r\n  }: IHTMLCanvas2DRendererConfig) {\r\n    super();\r\n\r\n    /* Define canvas html element */\r\n    this.element = document.createElement(\"canvas\");\r\n    /* Refers to canvas rendering context */\r\n    this.context = this.element.getContext(\"2d\");\r\n\r\n    /* Specify initial state */\r\n    this.deltaTime = 0;\r\n\r\n    /* Clean up at the end */\r\n    this.disposables.add(() => {\r\n      this.element = null;\r\n      this.context = null;\r\n      cancelAnimationFrame(this.animationFrameRequestId);\r\n    });\r\n\r\n    this.autoSize = autoSize;\r\n    this.maxFps = maxFps;\r\n\r\n    this.fitCanvasDimensionToElement();\r\n\r\n    /* Listen for window events */\r\n    window.addEventListener(\"resize\", this.fitCanvasDimensionToElement);\r\n    this.disposables.add(() => {\r\n      window.removeEventListener(\"resize\", this.fitCanvasDimensionToElement);\r\n    });\r\n  }\r\n\r\n  private fitCanvasDimensionToElement = () => {\r\n    this.element.width  = this.element.offsetWidth;\r\n    this.element.height = this.element.offsetHeight;\r\n    this._dimension = new Vector2(\r\n      this.element.offsetWidth,\r\n      this.element.offsetHeight,\r\n    );\r\n  }\r\n\r\n  /** Start rendering */\r\n  public start() {\r\n    this.renderFrame();\r\n  }\r\n\r\n  public getViewportDimension() {\r\n    return this.dimension;\r\n  }\r\n\r\n  /** Multiplies the current 2Dtransformation */\r\n  public translate2D(position: Vector2) {\r\n    this.context.translate(\r\n      position.x,\r\n      position.y,\r\n    );\r\n  }\r\n\r\n  /** Multiplies the current 2Dtransformation */\r\n  public cancelTranslate2D(position: Vector2) {\r\n    this.context.translate(\r\n      position.x * -1,\r\n      position.y * -1,\r\n    );\r\n  }\r\n\r\n  /** Multiplies the current 2Dtransformation */\r\n  public transform2D(transform: Transform2D) {\r\n    this.context.transform(\r\n      transform.scale.x,\r\n      0,\r\n      0,\r\n      transform.scale.y,\r\n      transform.position.x,\r\n      transform.position.y,\r\n    );\r\n\r\n    this.context.rotate(transform.rotate.z);\r\n  }\r\n\r\n  /** Flipped multiplies the current 2Dtransformation */\r\n  public cancelTransform2D(transform: Transform2D) {\r\n    this.context.transform(\r\n      transform.scale.x * -1,\r\n      0,\r\n      0,\r\n      transform.scale.y * -1,\r\n      transform.position.x * -1,\r\n      transform.position.y * -1,\r\n    );\r\n\r\n    this.context.rotate(transform.rotate.z);\r\n  }\r\n\r\n  /** Reset transformation for the scene rending */\r\n  private resetTransformationForCamera() {\r\n    this.context.setTransform(\r\n      1,\r\n      0,\r\n      0,\r\n      1,\r\n      this.element.offsetWidth / 2,\r\n      this.element.offsetHeight / 2,\r\n    );\r\n    this.context.rotate(0);\r\n  }\r\n\r\n  /** Reset transformation for an UI rendering */\r\n  private resetTranformationForUI() {\r\n    this.context.setTransform(\r\n      1,\r\n      0,\r\n      0,\r\n      1,\r\n      0,\r\n      0,\r\n    );\r\n    this.context.rotate(0);\r\n  }\r\n\r\n  /** Apply autoSize setting */\r\n  private applyAutoSize = () => {\r\n    if (this.autoSize) {\r\n      this.element.style.width = \"100%\";\r\n      this.element.style.height = \"100%\";\r\n\r\n      // Refresh canvas dimension and axis center\r\n      setTimeout(this.fitCanvasDimensionToElement);\r\n    }\r\n  }\r\n\r\n  /** Apply autoSize setting */\r\n  private applyMaxFps = () => {\r\n    this.maxFrameSize = 1000 / this.maxFps;\r\n  }\r\n\r\n  /** Will be called each animation frame */\r\n  private renderFrame = () => {\r\n    /* Cancel rendering if renderer destroyed */\r\n    if (!this.context) {\r\n      return;\r\n    }\r\n\r\n    this.deltaTime = (Number(new Date()) - this.lastFrameTimeStamp) + this.prevFrameOverlap;\r\n\r\n    if (this.deltaTime >= this.maxFrameSize) {\r\n      this.prevFrameOverlap = this.deltaTime - this.maxFrameSize;\r\n\r\n      if (this.prevFrameOverlap > this.maxFrameSize) {\r\n        // Multiple overlap\r\n        this.prevFrameOverlap = 0;\r\n      }\r\n\r\n      // Clear all before update\r\n      this.clear();\r\n\r\n      // Set canvas context axis for scene rendering\r\n      this.resetTransformationForCamera();\r\n      this.onUpdate(this.deltaTime);\r\n\r\n      // Set canvas context axis for UI rendering\r\n      this.resetTranformationForUI();\r\n      this.onUI(this.deltaTime);\r\n      this.renderFps();\r\n\r\n      this.lastFrameTimeStamp = Number(new Date());\r\n      this.deltaTime = 0;\r\n    }\r\n    this.animationFrameRequestId = requestAnimationFrame(this.renderFrame);\r\n  }\r\n\r\n  private clear() {\r\n    this.context.clearRect(0, 0, this.element.width, this.element.height);\r\n  }\r\n\r\n  private renderFps() {\r\n    // Memoize fill style\r\n    const backupStyle = this.context.fillStyle;\r\n    const fpsText = `FPS: ${Math.round(1000 / (this.deltaTime || 1))}`;\r\n    this.context.font = \"14px Tahoma\";\r\n    this.context.fillStyle = \"white\";\r\n    this.context.fillText(fpsText, 9, 11);\r\n    this.context.fillStyle = \"black\";\r\n    this.context.fillText(fpsText, 10, 10);\r\n    // Repair fill style\r\n    this.context.fillStyle = backupStyle;\r\n  }\r\n}\r\n"],"mappings":"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"}