{"version":3,"file":"Physics.js","names":["Physics","BaseModule","fixedUpdateTime","_fixedUpdateTime","value","onFixedUpdateTimeDidChange","deltaTime","_deltaTime","constructor","Date","getTime","_lastUpdateTimestamp","onUpdate","start","Error","runUpdate","_updateTimerId","setInterval","_onUpdate","clearInterval"],"sources":["../../src/modules/Physics.ts"],"sourcesContent":["import { BaseModule } from \"@inemotion/core\";\r\n\r\nexport default class Physics extends BaseModule {\r\n  public static serializableFields = [\r\n    \"fixedUpdateTime\",\r\n  ];\r\n\r\n  private _fixedUpdateTime: number = 30;\r\n  /** Fixed update timestamp */\r\n  public get fixedUpdateTime() {\r\n    return this._fixedUpdateTime;\r\n  }\r\n  public set fixedUpdateTime(value: number) {\r\n    this._fixedUpdateTime = value;\r\n    this.onFixedUpdateTimeDidChange();\r\n  }\r\n\r\n  /* Timestamp between updates */\r\n  private _deltaTime: number = 0;\r\n  /* Readonly timestamp between updates */\r\n  public get deltaTime() {\r\n    return this._deltaTime;\r\n  }\r\n\r\n  /** */\r\n  private _updateTimerId: any = null;\r\n  private _lastUpdateTimestamp: number;\r\n  constructor({\r\n    fixedUpdateTime = 20,\r\n  }) {\r\n    super();\r\n    this.fixedUpdateTime = fixedUpdateTime;\r\n  }\r\n\r\n  /** Start physics */\r\n  public start() {\r\n    if (typeof this.onUpdate !== \"function\") {\r\n      throw new Error(\"onUpdate should be spcified\");\r\n    }\r\n    this.runUpdate();\r\n  }\r\n\r\n  /** Start update */\r\n  private runUpdate() {\r\n    this._updateTimerId = setInterval(this._onUpdate, this.fixedUpdateTime);\r\n  }\r\n\r\n  /** Internal update handler */\r\n  private _onUpdate = () => {\r\n    this._deltaTime = new Date().getTime() - this._lastUpdateTimestamp;\r\n    this.onUpdate();\r\n  }\r\n\r\n  /** Will be called each update */\r\n  public onUpdate() {\r\n    throw new Error(\"onUpdate handler should be monkeypatched by the application\");\r\n  }\r\n\r\n  /** Handle user did change fixedUpdateTime */\r\n  private onFixedUpdateTimeDidChange() {\r\n    if (this._updateTimerId) {\r\n      clearInterval(this._updateTimerId);\r\n      this.runUpdate();\r\n    }\r\n  }\r\n}\r\n"],"mappings":";;;;;;AAAA;AAA6C;AAAA;AAAA;AAE9B,MAAMA,OAAO,SAASC,gBAAU,CAAC;EAO9C,IAAWC,eAAe,GAAG;IAC3B,OAAO,IAAI,CAACC,gBAAgB;EAC9B;EACA,IAAWD,eAAe,CAACE,KAAa,EAAE;IACxC,IAAI,CAACD,gBAAgB,GAAGC,KAAK;IAC7B,IAAI,CAACC,0BAA0B,EAAE;EACnC;EAKA,IAAWC,SAAS,GAAG;IACrB,OAAO,IAAI,CAACC,UAAU;EACxB;EAKAC,WAAW,CAAC;IACVN,eAAe,GAAG;EACpB,CAAC,EAAE;IACD,KAAK,EAAE;IAAC,0CAvByB,EAAE;IAAA,oCAWR,CAAC;IAAA,wCAOA,IAAI;IAAA;IAAA,mCAuBd,MAAM;MACxB,IAAI,CAACK,UAAU,GAAG,IAAIE,IAAI,EAAE,CAACC,OAAO,EAAE,GAAG,IAAI,CAACC,oBAAoB;MAClE,IAAI,CAACC,QAAQ,EAAE;IACjB,CAAC;IApBC,IAAI,CAACV,eAAe,GAAGA,eAAe;EACxC;EAGOW,KAAK,GAAG;IACb,IAAI,OAAO,IAAI,CAACD,QAAQ,KAAK,UAAU,EAAE;MACvC,MAAM,IAAIE,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,IAAI,CAACC,SAAS,EAAE;EAClB;EAGQA,SAAS,GAAG;IAClB,IAAI,CAACC,cAAc,GAAGC,WAAW,CAAC,IAAI,CAACC,SAAS,EAAE,IAAI,CAAChB,eAAe,CAAC;EACzE;EASOU,QAAQ,GAAG;IAChB,MAAM,IAAIE,KAAK,CAAC,6DAA6D,CAAC;EAChF;EAGQT,0BAA0B,GAAG;IACnC,IAAI,IAAI,CAACW,cAAc,EAAE;MACvBG,aAAa,CAAC,IAAI,CAACH,cAAc,CAAC;MAClC,IAAI,CAACD,SAAS,EAAE;IAClB;EACF;AACF;AAAC;AAAA,gBA/DoBf,OAAO,wBACS,CACjC,iBAAiB,CAClB"}